# Dependencies
node_modules
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Next.js
.next/
out/

# Production build
build/
dist/

# Environment files
# Keep local variants ignored, but include .env in build context so Dockerfile can COPY it for Next.js build
.env.*
!.env
!.env.example

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Logs
logs
*.log

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Git
.git
.gitignore

# Docker (keep compose and Dockerfile out of context if desired)
# Dockerfile will be provided explicitly via build, so ignoring it is okay.
Dockerfile*
docker-compose*
.dockerignore

# Scripts
docker-run.sh

# Documentation
README.md
*.md# Dependencies
node_modules
npm-debug.log*

# Next.js build output
.next
out

# Production build
dist

# Environment files
.env.local
.env.development.local
.env.test.local
.env.production.local

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage

# IDE files
.vscode
.idea

# OS files
.DS_Store
Thumbs.db

# Git
.git
.gitignore

# Docker
Dockerfile
docker-compose*.yml
.dockerignore

# Misc
README.md

